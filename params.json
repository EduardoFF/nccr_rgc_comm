{
  "name": "NCCR Robotics Rescue Grand Challenge - Wireless Networking ",
  "tagline": "",
  "body": "# Introduction \r\nThe purpose of this document is to describe the framework that is used to build and maintain a multi-hop wireless network infrastructure for the NCCR Grand Challenge on Rescue Robotics.\r\n\r\n\r\n# Proposed hardware\r\n+ ODROID U3 or C1(+) with Ubuntu\r\n+ XBee-PRO 868 \r\n+ TP-LINK TL-WN722N\r\n+ Camera, GPS Dongle (optional)\r\n\r\n \r\n# Installation using docker\r\n\r\n+ Install docker:\r\n    `sudo apt-get install lxc aufs-tools cgroup-lite apparmor docker.io`\r\n+ check that docker runs:\r\n    `sudo docker info\r\n    Containers: 0\r\n    Images: 0\r\n    Storage Driver: aufs\r\n     Root Dir: /var/lib/docker/aufs\r\n     Backing Filesystem: extfs\r\n     Dirs: 0\r\n     Dirperm1 Supported: false\r\n     Execution Driver: native-0.2\r\n     Kernel Version: 3.8.13.28\r\n     Operating System: Ubuntu 14.04.2 LTS\r\n     CPUs: 4\r\n    Total Memory: 1.976 GiB\r\n    Name: my-odroid-name\r\n    ID: G4RD:VWPC:RNEZ:LGE3:44UZ:S7OF:AKFI:QBY6:FS4N:CHS2:PETD:NX4O`\r\n\r\n\r\n\r\n# Making a \"bridge node\"\r\n\r\n## Installing dependencies\r\n### LCM:\r\n+ https://github.com/lcm-proj/lcm/releases/download/v1.3.1/lcm-1.3.1.zip\r\n+ unzip lcm-1.3.1.zip\r\n+ \r\n\r\n### Click:\r\n+ git clone https://github.com/EduardoFF/click.git\r\n+ cd click\r\n+ ./configure --disable-linuxmodule\r\n+ make -C ./userlevel MINDRIVER=RNP_BRIDGE_PKG\r\n+ make -C ./userlevel MINDRIVER=RNP_PKG\r\n\r\n### libxbee\r\n+ git clone https://github.com/attie/libxbee3.git\r\n+ follow the indicated installation procedure\r\n\r\n### libgps-dev\r\n+ apt-get install libgps-dev\r\n\r\n### Glog\r\n+ apt-get install libgoogle-glog-dev\r\n\r\n### XBee bridge:\r\n+ git clone https://github.com/EduardoFF/rnp_xbee_bridge.git\r\n+ cd rnp_xbee_bridge\r\n+ mkdir build\r\n+ cd build\r\n+ cmake ../src\r\n+ make end_node\r\n\r\n# Testing:\r\n## link between nodes\r\n\r\n### Setup the adhoc network\r\n+ connect the wifi dongle and identify the interface name (e.g., wlan1)\r\n+ setup the network interfaces in adhoc mode. Use the setup_adhoc.sh script in click/scripts\r\n+ choose an IP address (e.g., 10.42.43.10/24), channel (3), transmit power (20dBm)\r\n+ run the script: sudo bash setup_adhoc.sh wlan1 10.42.43.10/24 3 20\r\n+ repeat the procedure for the other node, but choose a different IP address\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}